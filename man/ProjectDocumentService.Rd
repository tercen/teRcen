% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_document_service.R
\name{ProjectDocumentService}
\alias{ProjectDocumentService}
\title{ProjectDocumentService}
\format{\code{\link{R6Class}} object.}
\description{
ProjectDocumentService

ProjectDocumentService
}
\section{Methods}{

\describe{
}
}

\section{Super class}{
\code{\link[tercen:HttpClientService]{tercen::HttpClientService}} -> \code{ProjectDocumentService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ProjectDocumentService$new()}}
\item \href{#method-findProjectObjectsByLastModifiedDate}{\code{ProjectDocumentService$findProjectObjectsByLastModifiedDate()}}
\item \href{#method-findFileByLastModifiedDate}{\code{ProjectDocumentService$findFileByLastModifiedDate()}}
\item \href{#method-findWorkflowByLastModifiedDate}{\code{ProjectDocumentService$findWorkflowByLastModifiedDate()}}
\item \href{#method-findSchemaByLastModifiedDate}{\code{ProjectDocumentService$findSchemaByLastModifiedDate()}}
\item \href{#method-findWorkflowByOwnerAndLastModifiedDate}{\code{ProjectDocumentService$findWorkflowByOwnerAndLastModifiedDate()}}
\item \href{#method-findSchemaByOwnerAndLastModifiedDate}{\code{ProjectDocumentService$findSchemaByOwnerAndLastModifiedDate()}}
\item \href{#method-findWorkflowBySchema}{\code{ProjectDocumentService$findWorkflowBySchema()}}
\item \href{#method-findWorkflowByOperator}{\code{ProjectDocumentService$findWorkflowByOperator()}}
\item \href{#method-findWorkflowTemplateByOwnerCreatedDate}{\code{ProjectDocumentService$findWorkflowTemplateByOwnerCreatedDate()}}
\item \href{#method-findWorkflowAppByOwnerCreatedDate}{\code{ProjectDocumentService$findWorkflowAppByOwnerCreatedDate()}}
\item \href{#method-clone}{\code{ProjectDocumentService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="create">}\href{../../tercen/html/HttpClientService.html#method-create}{\code{tercen::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="delete">}\href{../../tercen/html/HttpClientService.html#method-delete}{\code{tercen::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercen/html/HttpClientService.html#method-findKeys}{\code{tercen::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercen/html/HttpClientService.html#method-findStartKeys}{\code{tercen::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercen/html/HttpClientService.html#method-fromTson}{\code{tercen::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="get">}\href{../../tercen/html/HttpClientService.html#method-get}{\code{tercen::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercen/html/HttpClientService.html#method-getServiceUri}{\code{tercen::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="list">}\href{../../tercen/html/HttpClientService.html#method-list}{\code{tercen::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercen/html/HttpClientService.html#method-onResponseError}{\code{tercen::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="toTson">}\href{../../tercen/html/HttpClientService.html#method-toTson}{\code{tercen::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="update">}\href{../../tercen/html/HttpClientService.html#method-update}{\code{tercen::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findProjectObjectsByLastModifiedDate"></a>}}
\subsection{Method \code{findProjectObjectsByLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findProjectObjectsByLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findFileByLastModifiedDate"></a>}}
\subsection{Method \code{findFileByLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findFileByLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowByLastModifiedDate"></a>}}
\subsection{Method \code{findWorkflowByLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowByLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findSchemaByLastModifiedDate"></a>}}
\subsection{Method \code{findSchemaByLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findSchemaByLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowByOwnerAndLastModifiedDate"></a>}}
\subsection{Method \code{findWorkflowByOwnerAndLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowByOwnerAndLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findSchemaByOwnerAndLastModifiedDate"></a>}}
\subsection{Method \code{findSchemaByOwnerAndLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findSchemaByOwnerAndLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowBySchema"></a>}}
\subsection{Method \code{findWorkflowBySchema()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowBySchema(keys = NULL, useFactory = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowByOperator"></a>}}
\subsection{Method \code{findWorkflowByOperator()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowByOperator(keys = NULL, useFactory = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowTemplateByOwnerCreatedDate"></a>}}
\subsection{Method \code{findWorkflowTemplateByOwnerCreatedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowTemplateByOwnerCreatedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findWorkflowAppByOwnerCreatedDate"></a>}}
\subsection{Method \code{findWorkflowAppByOwnerCreatedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$findWorkflowAppByOwnerCreatedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectDocumentService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
